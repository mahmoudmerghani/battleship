(()=>{"use strict";var e={208:(e,n,r)=>{r.d(n,{A:()=>o});var t=r(354),a=r.n(t),s=r(314),i=r.n(s)()(a());i.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --cell-size: 35px;\n    --primary-color: #1a3c5e;\n    --secondary-color: #2d5f8a;\n    --accent-color: #4a90e2;\n    --hit-color: #ff4444;\n    --miss-color: #7a8b99;\n    --ship-color: #23313e;\n}\n\nbody {\n    background: linear-gradient(135deg, #1c2833, #2c3e50);\n    color: white;\n    font-family: 'Segoe UI', Arial, sans-serif;\n    min-height: 100vh;\n}\n\n.game {\n    padding: 2rem;\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n#message {\n    text-align: center;\n    font-size: 1.2rem;\n}\n\n.board-container {\n    display: flex;\n    justify-content: center;\n    gap: 3rem;\n    flex-wrap: wrap;\n    padding: 2rem 0;\n}\n\n.board {\n    background: rgba(255, 255, 255, 0.1);\n    border: 2px solid var(--accent-color);\n    border-radius: 8px;\n    width: fit-content;\n    display: grid;\n    grid-template-columns: repeat(10, var(--cell-size));\n    grid-template-rows: repeat(10, var(--cell-size));\n    box-shadow: 0 0 20px rgba(74, 144, 226, 0.2);\n    transition: transform 0.3s ease;\n}\n\n.board:hover {\n    transform: scale(1.02);\n}\n\n.computer-board {\n    display: none;\n}\n\n.cell {\n    background-color: rgba(255, 255, 255, 0.05);\n    border: 1px solid var(--accent-color);\n    width: var(--cell-size);\n    height: var(--cell-size);\n    cursor: pointer;\n    transition: all 0.2s ease;\n}\n\n.cell.ship {\n    background-color: var(--ship-color);\n    border: 1px solid var(--accent-color);\n}\n\n.cell.highlighted, .cell:hover {\n    background-color: rgba(74, 144, 226, 0.5);\n    transform: scale(1.1);\n    z-index: 1;\n}\n\n.cell.unavailable {\n    cursor: not-allowed;\n}\n\n.cell.hit {\n    background-color: var(--hit-color);\n    animation: hitEffect 0.5s ease;\n}\n\n.cell.miss {\n    background-color: var(--miss-color);\n    animation: missEffect 0.5s ease;\n}\n\n.ships-container {\n    background: rgba(255, 255, 255, 0.1);\n    padding: 1.5rem;\n    border-radius: 8px;\n    margin: 1.5rem 0;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1.5rem;\n}\n\n.ships-container.vertical .ship-cells {\n    flex-direction: column;\n}\n\n.ships-container .cell {\n    background-color: var(--ship-color);\n    border: 1px solid var(--accent-color);\n    margin: 0;\n    border-radius: 2px;\n}\n\n.ships-container .ship {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0;\n    padding: 2rem;\n    border-radius: 4px;\n    background: rgba(255, 255, 255, 0.05);\n    transition: all 0.3s ease;\n    cursor: pointer;\n    flex: 1;\n}\n\n.ships-container .ship:hover {\n    transform: scale(1.05);\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.ships-container .ship.selected {\n    background: rgba(76, 175, 80, 0.2);\n    border: 2px solid #4CAF50;\n    transform: scale(1.1);\n    box-shadow: 0 0 15px rgba(76, 175, 80, 0.3);\n}\n\n.ships-container .ship-cells {\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n}\n\n.controls {\n    display: flex;\n    justify-content: center;\n    gap: 2rem;\n    flex-wrap: wrap;\n}\n\n.difficulty {\n    display: flex;\n    align-items: center;\n}\n\n.difficulty p {\n    font-size: 1.2rem;\n}\n\n.difficulty button {\n    background: rgba(255, 255, 255, 0.05);\n\n    border: 2px solid rgba(255, 255, 255, 0.6);\n    transform: scale(1.1);\n    box-shadow: 0 0 15px rgba(76, 175, 80, 0.3);\n}\n\n.difficulty button.selected {\n    background-color: #4CAF50;\n}\n\nbutton {\n    background-color: var(--accent-color);\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 6px;\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 600;\n    margin: 0.5rem;\n    transition: all 0.3s ease;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n}\n\nbutton:hover {\n    background-color: #357abd;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n}\n\nbutton:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n@keyframes hitEffect {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.2); }\n    100% { transform: scale(1); }\n}\n\n@keyframes missEffect {\n    0% { opacity: 0; }\n    100% { opacity: 1; }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;IACjB,wBAAwB;IACxB,0BAA0B;IAC1B,uBAAuB;IACvB,oBAAoB;IACpB,qBAAqB;IACrB,qBAAqB;AACzB;;AAEA;IACI,qDAAqD;IACrD,YAAY;IACZ,0CAA0C;IAC1C,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,oCAAoC;IACpC,qCAAqC;IACrC,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,mDAAmD;IACnD,gDAAgD;IAChD,4CAA4C;IAC5C,+BAA+B;AACnC;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,2CAA2C;IAC3C,qCAAqC;IACrC,uBAAuB;IACvB,wBAAwB;IACxB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,mCAAmC;IACnC,qCAAqC;AACzC;;AAEA;IACI,yCAAyC;IACzC,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,kCAAkC;IAClC,8BAA8B;AAClC;;AAEA;IACI,mCAAmC;IACnC,+BAA+B;AACnC;;AAEA;IACI,oCAAoC;IACpC,eAAe;IACf,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,eAAe;IACf,WAAW;AACf;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,mCAAmC;IACnC,qCAAqC;IACrC,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;IAC9B,SAAS;IACT,aAAa;IACb,kBAAkB;IAClB,qCAAqC;IACrC,yBAAyB;IACzB,eAAe;IACf,OAAO;AACX;;AAEA;IACI,sBAAsB;IACtB,oCAAoC;AACxC;;AAEA;IACI,kCAAkC;IAClC,yBAAyB;IACzB,qBAAqB;IACrB,2CAA2C;AAC/C;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,qCAAqC;;IAErC,0CAA0C;IAC1C,qBAAqB;IACrB,2CAA2C;AAC/C;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,qCAAqC;IACrC,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,yBAAyB;IACzB,wCAAwC;AAC5C;;AAEA;IACI,yBAAyB;IACzB,2BAA2B;IAC3B,yCAAyC;AAC7C;;AAEA;IACI,wBAAwB;IACxB,wCAAwC;AAC5C;;AAEA;IACI,KAAK,mBAAmB,EAAE;IAC1B,MAAM,qBAAqB,EAAE;IAC7B,OAAO,mBAAmB,EAAE;AAChC;;AAEA;IACI,KAAK,UAAU,EAAE;IACjB,OAAO,UAAU,EAAE;AACvB",sourcesContent:["* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n:root {\r\n    --cell-size: 35px;\r\n    --primary-color: #1a3c5e;\r\n    --secondary-color: #2d5f8a;\r\n    --accent-color: #4a90e2;\r\n    --hit-color: #ff4444;\r\n    --miss-color: #7a8b99;\r\n    --ship-color: #23313e;\r\n}\r\n\r\nbody {\r\n    background: linear-gradient(135deg, #1c2833, #2c3e50);\r\n    color: white;\r\n    font-family: 'Segoe UI', Arial, sans-serif;\r\n    min-height: 100vh;\r\n}\r\n\r\n.game {\r\n    padding: 2rem;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\n\r\n#message {\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n}\r\n\r\n.board-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 3rem;\r\n    flex-wrap: wrap;\r\n    padding: 2rem 0;\r\n}\r\n\r\n.board {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border: 2px solid var(--accent-color);\r\n    border-radius: 8px;\r\n    width: fit-content;\r\n    display: grid;\r\n    grid-template-columns: repeat(10, var(--cell-size));\r\n    grid-template-rows: repeat(10, var(--cell-size));\r\n    box-shadow: 0 0 20px rgba(74, 144, 226, 0.2);\r\n    transition: transform 0.3s ease;\r\n}\r\n\r\n.board:hover {\r\n    transform: scale(1.02);\r\n}\r\n\r\n.computer-board {\r\n    display: none;\r\n}\r\n\r\n.cell {\r\n    background-color: rgba(255, 255, 255, 0.05);\r\n    border: 1px solid var(--accent-color);\r\n    width: var(--cell-size);\r\n    height: var(--cell-size);\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.cell.ship {\r\n    background-color: var(--ship-color);\r\n    border: 1px solid var(--accent-color);\r\n}\r\n\r\n.cell.highlighted, .cell:hover {\r\n    background-color: rgba(74, 144, 226, 0.5);\r\n    transform: scale(1.1);\r\n    z-index: 1;\r\n}\r\n\r\n.cell.unavailable {\r\n    cursor: not-allowed;\r\n}\r\n\r\n.cell.hit {\r\n    background-color: var(--hit-color);\r\n    animation: hitEffect 0.5s ease;\r\n}\r\n\r\n.cell.miss {\r\n    background-color: var(--miss-color);\r\n    animation: missEffect 0.5s ease;\r\n}\r\n\r\n.ships-container {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    padding: 1.5rem;\r\n    border-radius: 8px;\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1.5rem;\r\n}\r\n\r\n.ships-container.vertical .ship-cells {\r\n    flex-direction: column;\r\n}\r\n\r\n.ships-container .cell {\r\n    background-color: var(--ship-color);\r\n    border: 1px solid var(--accent-color);\r\n    margin: 0;\r\n    border-radius: 2px;\r\n}\r\n\r\n.ships-container .ship {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0;\r\n    padding: 2rem;\r\n    border-radius: 4px;\r\n    background: rgba(255, 255, 255, 0.05);\r\n    transition: all 0.3s ease;\r\n    cursor: pointer;\r\n    flex: 1;\r\n}\r\n\r\n.ships-container .ship:hover {\r\n    transform: scale(1.05);\r\n    background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.ships-container .ship.selected {\r\n    background: rgba(76, 175, 80, 0.2);\r\n    border: 2px solid #4CAF50;\r\n    transform: scale(1.1);\r\n    box-shadow: 0 0 15px rgba(76, 175, 80, 0.3);\r\n}\r\n\r\n.ships-container .ship-cells {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.controls {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 2rem;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.difficulty {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.difficulty p {\r\n    font-size: 1.2rem;\r\n}\r\n\r\n.difficulty button {\r\n    background: rgba(255, 255, 255, 0.05);\r\n\r\n    border: 2px solid rgba(255, 255, 255, 0.6);\r\n    transform: scale(1.1);\r\n    box-shadow: 0 0 15px rgba(76, 175, 80, 0.3);\r\n}\r\n\r\n.difficulty button.selected {\r\n    background-color: #4CAF50;\r\n}\r\n\r\nbutton {\r\n    background-color: var(--accent-color);\r\n    color: white;\r\n    border: none;\r\n    padding: 12px 24px;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    margin: 0.5rem;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #357abd;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\nbutton:active {\r\n    transform: translateY(0);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n@keyframes hitEffect {\r\n    0% { transform: scale(1); }\r\n    50% { transform: scale(1.2); }\r\n    100% { transform: scale(1); }\r\n}\r\n\r\n@keyframes missEffect {\r\n    0% { opacity: 0; }\r\n    100% { opacity: 1; }\r\n}"],sourceRoot:""}]);const o=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,a,s){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(t)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);t&&i[A[0]]||(void 0!==s&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=s),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},354:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),s="/*# ".concat(a," */");return[n].concat([s]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var s={},i=[],o=0;o<e.length;o++){var l=e[o],c=t.base?l[0]+t.base:l[0],A=s[c]||0,d="".concat(c," ").concat(A);s[c]=A+1;var h=r(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)n[h].references++,n[h].updater(p);else{var u=a(p,t);t.byIndex=o,n.splice(o,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function a(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,a){var s=t(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var o=r(s[i]);n[o].references--}for(var l=t(e,a),c=0;c<s.length;c++){var A=r(s[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}s=l}}},659:e=>{var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var s=r.sourceMap;s&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function r(t){var a=n[t];if(void 0!==a)return a.exports;var s=n[t]={id:t,exports:{}};return e[t](s,s.exports,r),s.exports}r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r.nc=void 0;var t=r(72),a=r.n(t),s=r(825),i=r.n(s),o=r(659),l=r.n(o),c=r(56),A=r.n(c),d=r(540),h=r.n(d),p=r(113),u=r.n(p),C=r(208),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=l().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=h(),a()(C.A,f),C.A&&C.A.locals&&C.A.locals;class m{constructor(e,n){this.ship=e,this.hit=n}}class I{static SIZE=10;static HORIZONTAL_ORIENTATION="h";static VERTICAL_ORIENTATION="v";static attackResult={HIT:"hit",MISS:"miss",ALREADY_HIT:"already-hit",OUT_OF_BOUNDS:"out-of-bounds"};constructor(){this.board=this.createBoard(),this.ships=new Set,this.targetCells=[]}createBoard(){const e=[];for(let n=0;n<I.SIZE;n++){const n=[];for(let e=0;e<I.SIZE;e++)n.push(new m(null,!1));e.push(n)}return e}getCell(e,n){return this.board[e][n]}placeShip(e,n,r,t=I.HORIZONTAL_ORIENTATION){if(this.isSpaceAvailable(e,n,r,t)){const a=I.getShipIndices(e,n,r,t);for(const[e,n]of a)this.getCell(e,n).ship=r;return this.ships.add(r),!0}return!1}receiveAttack(e,n){if(this.isOutOfBounds(e,n))return I.attackResult.OUT_OF_BOUNDS;const r=this.getCell(e,n);return r.hit?I.attackResult.ALREADY_HIT:(r.hit=!0,null!==r.ship?(r.ship.hit(),I.attackResult.HIT):I.attackResult.MISS)}isOutOfBounds(e,n){return e<0||e>=I.SIZE||n<0||n>=I.SIZE}isSpaceAvailable(e,n,r,t=I.HORIZONTAL_ORIENTATION){const a=I.getShipIndices(e,n,r,t);for(const[e,n]of a)if(this.isOutOfBounds(e,n)||null!==this.getCell(e,n).ship)return!1;return!0}static getShipIndices(e,n,r,t=I.HORIZONTAL_ORIENTATION){const a=[];if(t===I.HORIZONTAL_ORIENTATION)for(let t=0;t<r.length;t++)a.push([e,n+t]);else if(t===I.VERTICAL_ORIENTATION)for(let t=0;t<r.length;t++)a.push([e+t,n]);return a}placeShipsRandomly(e){const n=[];for(const r of e)for(;;){const e=Math.floor(10*Math.random()),t=Math.floor(10*Math.random());let a;if(a=Math.random()>.5?I.HORIZONTAL_ORIENTATION:I.VERTICAL_ORIENTATION,this.placeShip(e,t,r,a)){n.push(I.getShipIndices(e,t,r,a));break}}return n}receiveRandomAttack(){for(;;){const e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random()),r=this.receiveAttack(e,n);if(r===I.attackResult.HIT||r===I.attackResult.MISS)return{result:r,x:e,y:n}}}allShipsSunk(){return[...this.ships].every((e=>e.isSunk()))}getNeighbors(e,n){const r=[],t=[[0,1],[1,0],[0,-1],[-1,0]];for(const[a,s]of t){const t=e+a,i=n+s;this.isOutOfBounds(t,i)||this.getCell(t,i).hit||r.push([t,i])}return r}receiveSmartAttack(){if(0===this.targetCells.length){const{result:e,x:n,y:r}=this.receiveRandomAttack();return e===I.attackResult.HIT&&(this.targetCells=this.targetCells.concat(this.getNeighbors(n,r))),{result:e,x:n,y:r}}const[e,n]=this.targetCells.shift(),r=this.receiveAttack(e,n);return r===I.attackResult.HIT&&(this.targetCells=this.targetCells.concat(this.getNeighbors(e,n))),{result:r,x:e,y:n}}}class g{constructor(e,n){this.name=e,this.length=n,this.numberOfHits=0}hit(){this.numberOfHits<this.length&&this.numberOfHits++}isSunk(){return this.numberOfHits>=this.length}}class b{constructor(){this.board=this.createBoard(),this.lastHighlightedCells=[]}createBoard(){const e=[];for(let n=0;n<10;n++){const r=[];for(let e=0;e<10;e++){const t=document.createElement("div");t.classList.add("cell"),t.dataset.row=n,t.dataset.column=e,r.push(t)}e.push(r)}return e}markAsShip(e){for(const n of e){const[e,r]=n;this.board[e][r].classList.add("ship")}}unhighlightCells(){for(const e of this.lastHighlightedCells)e.classList.remove("highlighted");this.lastHighlightedCells=[]}highlightCells(e){this.unhighlightCells();for(const n of e){const[e,r]=n;this.lastHighlightedCells.push(this.board[e][r]),this.board[e][r].classList.add("highlighted")}}resetUnavailableCell(e,n){this.board[e][n].classList.remove("unavailable")}markAsUnavailable(e,n){this.board[e][n].classList.add("unavailable"),this.lastUnavailableCell=this.board[e][n]}updateCell(e,n,r){const t=this.board[e][n];switch(r){case I.attackResult.HIT:t.classList.add("hit");break;case I.attackResult.MISS:t.classList.add("miss")}}}const B=function(e){document.querySelector(".ships-container").querySelector(`[data-ship-id=${e}]`).remove()},y=function(){document.querySelector(".ships-container").querySelectorAll("[data-ship-id]").forEach((e=>e.remove()))},v=function(e){document.querySelector(".ships-container").querySelectorAll("[data-ship-id]").forEach((n=>{n.dataset.shipId===e?n.classList.add("selected"):n.classList.remove("selected")}))},x=function(e){const n=[];for(const r of e){const e=document.createElement("div"),t=document.createElement("div"),a=document.createElement("h2");e.classList.add("ship"),e.dataset.shipId=r.name,t.classList.add("ship-cells"),a.textContent=r.name,e.appendChild(t),e.appendChild(a);for(let e=0;e<r.length;e++){const e=document.createElement("div");e.classList.add("cell"),t.appendChild(e)}n.push(e)}return n},E=function(e,n=!1){const r=document.getElementById("message");n?r.textContent+=e:r.textContent=e},S=function(e){document.querySelectorAll(".difficulty button").forEach((e=>e.classList.remove("selected"))),e.classList.add("selected")},k="placing ships",w="player turn",O="computer turn",T="game over",R="easy";class L{static createShips(){return[new g("Destroyer",2),new g("Submarine",3),new g("Cruiser",3),new g("Battleship",4),new g("Carrier",5)]}constructor(){this.initializeGameState(),this.initializeUI(),this.addEventListeners()}initializeGameState(){this.playerBoard=new I,this.computerBoard=new I,this.playerBoardUI=new b,this.computerBoardUI=new b,this.phase=k,this.ships=L.createShips(),this.selectedShip=null,this.orientation=I.HORIZONTAL_ORIENTATION,this.difficulty=R}initializeUI(){const e=document.querySelector(".player-board"),n=document.querySelector(".ships-container"),r=x(this.ships);this.playerBoardUI.board.forEach((n=>{n.forEach((n=>{e.appendChild(n)}))})),r.forEach((e=>n.appendChild(e))),E("Place your ships")}setUpComputerBoard(){const e=document.querySelector(".computer-board");e.style.display="grid",this.computerBoardUI.board.forEach((n=>{n.forEach((n=>{e.appendChild(n)}))})),this.computerBoard.placeShipsRandomly(L.createShips())}addEventListeners(){const e=document.querySelector(".player-board"),n=document.querySelector(".computer-board"),r=document.querySelector(".ships-container"),t=document.getElementById("rotate"),a=document.getElementById("random"),s=document.getElementById("reset"),i=document.querySelector(".difficulty");e.addEventListener("click",this.handlePlaceShip),r.addEventListener("click",this.handleSelectShip),t.addEventListener("click",this.handleRotate),e.addEventListener("mouseover",this.handleHover),e.addEventListener("mouseleave",(()=>{this.playerBoardUI.unhighlightCells()})),e.addEventListener("mouseout",(e=>{if(!e.target.classList.contains("cell")||!this.selectedShip||this.phase!==k)return;const n=parseInt(e.target.dataset.row,10),r=parseInt(e.target.dataset.column,10);this.playerBoardUI.resetUnavailableCell(n,r)})),a.addEventListener("click",this.handlePlaceShipsRandomly),n.addEventListener("click",this.handlePlayerAttack),s.addEventListener("click",this.handleReset),i.addEventListener("click",this.handleChangeDifficulty)}handlePlaceShip=e=>{if(!e.target.classList.contains("cell")||!this.selectedShip||this.phase!==k)return;const n=parseInt(e.target.dataset.row,10),r=parseInt(e.target.dataset.column,10);this.playerBoard.placeShip(n,r,this.selectedShip,this.orientation)&&(this.ships=this.ships.filter((e=>e!==this.selectedShip)),this.playerBoardUI.markAsShip(I.getShipIndices(n,r,this.selectedShip,this.orientation)),this.playerBoardUI.unhighlightCells(),B(this.selectedShip.name),this.selectedShip=null,0===this.ships.length&&(this.phase=w,this.setUpComputerBoard(),E("Attack the enemy board.")))};handleSelectShip=e=>{const n=e.target.closest(".ship");if(!n||this.phase!==k)return;const r=n.dataset.shipId;this.selectedShip=this.ships.find((e=>e.name===r)),v(r)};handleRotate=e=>{if(0===this.ships.length||this.phase!==k)return;document.querySelector(".ships-container").classList.toggle("vertical");const n=this.orientation===I.VERTICAL_ORIENTATION;this.orientation=n?I.HORIZONTAL_ORIENTATION:I.VERTICAL_ORIENTATION};handleHover=e=>{if(!e.target.classList.contains("cell")||!this.selectedShip||this.phase!==k)return;const n=parseInt(e.target.dataset.row,10),r=parseInt(e.target.dataset.column,10);this.playerBoard.isSpaceAvailable(n,r,this.selectedShip,this.orientation)?(this.playerBoardUI.highlightCells(I.getShipIndices(n,r,this.selectedShip,this.orientation)),this.playerBoardUI.resetUnavailableCell(n,r)):(this.playerBoardUI.unhighlightCells(),this.playerBoardUI.markAsUnavailable(n,r))};handlePlaceShipsRandomly=e=>{if(0===this.ships.length||this.phase!==k)return;const n=this.playerBoard.placeShipsRandomly(this.ships);this.ships=[],y(),n.forEach((e=>this.playerBoardUI.markAsShip(e))),this.phase=w,this.setUpComputerBoard(),E("Attack the enemy board.")};handlePlayerAttack=e=>{if(!e.target.classList.contains("cell")||this.phase!==w)return;const n=parseInt(e.target.dataset.row,10),r=parseInt(e.target.dataset.column,10),t=this.computerBoard.receiveAttack(n,r);if(t===I.attackResult.HIT||t===I.attackResult.MISS){if(this.computerBoardUI.updateCell(n,r,t),this.computerBoardUI.markAsUnavailable(n,r),this.phase=O,t===I.attackResult.HIT){const e=this.computerBoard.getCell(n,r);e.ship.isSunk()&&E(`Enemy's ${e.ship.name} has been destroyed`)}this.computerBoard.allShipsSunk()?(E("Game over, You won!"),this.phase=T):this.attackPlayer()}};attackPlayer(){if(this.phase!==O)return;let e;switch(this.difficulty){case R:e=this.playerBoard.receiveSmartAttack;break;case"random":e=this.playerBoard.receiveRandomAttack}const{result:n,x:r,y:t}=e.call(this.playerBoard);if(this.playerBoardUI.updateCell(r,t,n),this.phase=w,n===I.attackResult.HIT){const e=this.playerBoard.getCell(r,t);e.ship.isSunk()&&E(`Your ${e.ship.name} has been destroyed`)}this.playerBoard.allShipsSunk()&&(this.phase=T,E("Game over, Computer won"))}handleReset=e=>{const n=document.querySelector(".player-board"),r=document.querySelector(".computer-board"),t=document.querySelector(".ships-container"),a=document.getElementById("easy");n.innerHTML="",r.innerHTML="",t.innerHTML="",r.style.display="none",t.classList.remove("vertical"),S(a),this.initializeGameState(),this.initializeUI()};handleChangeDifficulty=e=>{if(e.target.classList.contains("selected")||this.phase!==k)return;const n=e.target.dataset.difficulty;n&&(this.difficulty=n,S(e.target))}}new L})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,